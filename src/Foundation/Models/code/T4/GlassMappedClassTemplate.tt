<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)packages\Sitecore.Kernel.NoReferences.8.2.161221\lib\NET452\Sitecore.Kernel.DLL" #>
<#@ import namespace="Sitecore.CodeGenerator.Domain" #>
<#@ import namespace="System.Linq" #>
<#+
public class GlassMappedClassTemplate : CSharpTemplate
{
  public TemplateItem Template { get; set; }

  public Func<string,string,FieldOptions> GetFieldOptionsFunction { get; set; }

  private string Extends { get; set; }

  public string Namespace { get; set; }

  public override string Identifier(string name){
    if(name.StartsWith("_"))
    {
      name = name.Substring(1);
    }
    return base.Identifier(name);
  }

  public override string TransformText()
  {
    this.Extends = string.Empty;
    if(this.Template.BaseTemplates.Any())
    {
      
      this.Extends = string.Concat(" : ", string.Join(", ", this.Template.BaseTemplates.Select(b => string.Concat("I", Identifier(b.SyncItem.Name)))));
      this.Extends += ", IBaseItem";

    }
    else
    {
      this.Extends = " : IBaseItem"; //string.Empty
    }

    base.TransformText();
#>
namespace <#= Namespace #>
{
  using System;
  using System.Collections.Generic;
  using System.Collections.Specialized;
  using Car.Foundation.Models;
  using global::Glass.Mapper.Sc.Fields;
  using global::Glass.Mapper.Sc.Configuration;
  using global::Glass.Mapper.Sc.Configuration.Attributes;

  /// <summary>
  /// Represents a mapped type for item <#= Template.SyncItem.ID #> in Sitecore.
  /// Path: <#= Template.SyncItem.ItemPath #>
  /// </summary>
  [SitecoreType(TemplateId = "<#= Template.SyncItem.ID #>")]
  public partial interface I<#=Identifier(Template.SyncItem.Name)#><#=Extends#>
  {
<#+
    foreach(var section in Template.Sections)
    {
#>
    #region <#=section.SyncItem.Name#>

<#+
      foreach(var field in section.Fields)
      {
        var fieldOptions = GetFieldOptionsFunction(field.FieldTypeName, field.SyncItem.ID);
        if(! string.IsNullOrWhiteSpace(field.FieldTitle))
        {
#>
    /// <summary>
    /// <#=field.FieldTitle#>
    /// </summary>
<#+
        }
#>
    [SitecoreField(FieldId = "<#=field.SyncItem.ID#>"<#=fieldOptions.AttributeExtras ?? string.Empty #>)]
    <#=fieldOptions.GlassFieldTypeName#> <#=Identifier(field.SyncItem.Name)#> { get; set; }

<#+
      }
#>
    #endregion
<#+
    }
#>  
  }
}
<#+
        return this.GenerationEnvironment.ToString();
  }
}
#>